/*
  Copyright (C) 2024 Nethesis S.r.l.
  PDX-License-Identifier: AGPL-3.0-or-later
*/

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    font-family: 'Poppins', system-ui, sans-serif;
    @apply h-full;
  }
  body {
    @apply h-full overflow-hidden;
  }
  #__next {
    @apply h-full;
  }
}

/* fix browser autofill color */
input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 1000px #030712 inset !important;
  -webkit-text-fill-color: white !important;
}

:root {
  /* react tooltip opacity */
  --rt-opacity: 1;
}

.react-tooltip {
  @apply z-50 bg-gray-700 text-white dark:bg-gray-300 dark:text-gray-900;
}

.loader {
  position: fixed;
  right: 18px !important;
  animation-duration: 1s;
}

.ringing-animation {
  width: 16px;
  height: 16px;
  display: inline-block;
  position: relative;
}
.ringing-animation::after,
.ringing-animation::before {
  content: '';
  box-sizing: border-box;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background-color: currentcolor;
  position: absolute;
  left: 0;
  top: 0;
  animation: ringingAnimation 1s linear infinite;
}
.ringing-animation::after {
  animation-delay: 0.5s;
}

@keyframes ringingAnimation {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

.slick-prev:before,
.slick-next:before {
  color: #059669 !important;
  font-size: 30px !important;
  z-index: 999 !important;
}

.slick-prev,
.slick-next {
  z-index: 999 !important;
  top: 30px !important;
}
.slick-prev {
  left: 0px !important;
}
.slick-next {
  right: 0px !important;
}

.slick-list {
  position: relative;
}
.slick-slide div {
  width: auto;
  margin-right: 10px;
}
.slick-slide img {
  width: calc(100% - 10px) !important;
}

.scrolling-text-container {
  width: 100%; 
  overflow: hidden;
}

.scrolling-text {
  display: inline-block;
  white-space: nowrap;
  animation: scrollText 10s linear infinite;
}

@keyframes scrollText {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-100%);
  }
}
